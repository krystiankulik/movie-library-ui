directive @cacheControl(
    maxAge: Int
    scope: CacheControlScope
) on FIELD_DEFINITION | OBJECT | INTERFACE
input AddMovieInput {
    name: String!
    releaseDate: String!
    duration: Int!
    actors: [String!]!
}

enum CacheControlScope {
    PUBLIC
    PRIVATE
}

input EditMovieInput {
    movieId: String!
    name: String!
    releaseDate: String!
    duration: Int!
    actors: [String!]!
}

type LoginResponse {
    token: String
    user: User
}

type Movie {
    id: ID!
    name: String!
    releaseDate: String!
    duration: Int!
    actors: [String!]!
    username: String!
    averageNote: Float!
    ratings: [Rating]
}

type MovieDeletion {
    id: String
}

type Mutation {
    register(username: String!, password: String!): User!
    login(username: String!, password: String!): LoginResponse!
    addMovie(input: AddMovieInput): Movie
    rateMovie(movieId: String!, note: Int!, comment: String): Movie
    removeMovie(movieId: String!): MovieDeletion
    editMovie(input: EditMovieInput): Movie
}

type Query {
    currentUser: User!
    getAllMovies: [Movie!]!
    getMovie(movieId: String!): Movie
}

type Rating {
    username: String!
    note: Int!
    comment: String
}

type Subscription {
    ratingAdded(movieId: String!): Rating
}

scalar Upload

type User {
    id: ID!
    username: String!
}

